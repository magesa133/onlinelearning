<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Student Dashboard</title>
    <!-- <link rel="stylesheet" href="{{ url_for('static', filename='styles.css') }}"> -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        /* General Styling */
        body {
            font-family: 'Poppins', sans-serif;
            margin: 0;
            background-color: #f8f9fa;
            display: flex;
            flex-direction: column;
            min-height: 100vh;
        }

        .dashboard-container {
            display: grid;
            grid-template-areas:
                "header header header"
                "sidebar main right";
            grid-template-columns: 250px 1fr 250px;
            grid-template-rows: auto 1fr;
            height: 100vh;
        }

        /* Header Styling */
        .dashboard-header {
            grid-area: header;
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            position: sticky;
            top: 0;
            z-index: 1000;
        }

        .hamburger {
            display: none;
            cursor: pointer;
            flex-direction: column;
            gap: 4px;
        }

        .hamburger .bar {
            width: 25px;
            height: 3px;
            background-color: white;
        }

        .user-profile img {
            cursor: pointer;
            width: 40px;
            height: 40px;
            border-radius: 50%;
        }

        .dropdown-menu {
            display: none;
            position: absolute;
            background-color: white;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            border-radius: 4px;
            right: 10px;
            top: 60px;
            z-index: 1000;
        }

        .dropdown-menu.active {
            display: block;
        }

        .dropdown-menu a {
            display: block;
            text-decoration: none;
            color: #333;
            padding: 10px;
            transition: background-color 0.2s;
        }

        .dropdown-menu a:hover {
            background-color: #f0f0f0;
        }

        /* Sidebar Styling */
        .sidebar {
            grid-area: sidebar;
            background-color: #f7f7f7;
            padding: 20px;
            height: 100%;
            position: fixed;
            left: -250px;
            top: 0;
            bottom: 0;
            transition: left 0.3s;
            z-index: 999;
        }

        .sidebar.active {
            left: 0;
        }

        .sidebar ul {
            list-style-type: none;
            padding: 0;
            margin: 0;
        }

        .sidebar li {
            margin: 15px 0;
        }

        .sidebar a {
            text-decoration: none;
            color: #333;
            display: flex;
            align-items: center;
            padding: 10px;
            border-radius: 5px;
            transition: background-color 0.2s;
        }

        .sidebar a:hover {
            background-color: #4CAF50;
            color: white;
        }

        /* Main Content Styling */
        .dashboard-main {
            grid-area: main;
            overflow-y: auto;
            padding: 20px;
            background-color: white;
        }

        .cards-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }

        .card {
            background-color: white;
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 20px;
            text-align: center;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            transition: transform 0.2s, box-shadow 0.2s;
        }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 12px rgba(0, 0, 0, 0.2);
        }

        .card button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .card button:hover {
            background-color: #45a049;
        }

        /* Footer Styling */
        .footer {
            grid-area: footer;
            background-color: #343a40;
            color: white;
            text-align: center;
            padding: 10px;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .dashboard-container {
                grid-template-areas:
                    "header"
                    "main"
                    "footer";
                grid-template-columns: 1fr;
            }

            .sidebar {
                display: none;
            }

            .hamburger {
                display: flex;
            }

            .dashboard-main {
                padding: 10px;
            }
        }
    </style>
</head>
<body>
    <div class="dashboard-container">
        <header class="dashboard-header">
            <h1>Student Dashboard</h1>
            <div class="hamburger" id="hamburger" onclick="toggleSidebar()">
                <span class="bar"></span>
                <span class="bar"></span>
                <span class="bar"></span>
            </div>

            <div class="user-profile" onmouseleave="closeDropdown()">
                <img src="{{ profile_image or 'https://img.icons8.com/?size=100&id=DnvVED73VLBQ&format=png&color=000000' }}" 
                     alt="User Icon" class="user-icon" onclick="toggleDropdown()">
                <div class="dropdown-menu" id="dropdown-menu">
                    <a href="#"><i class="fa fa-user"></i> Profile</a>
                    <a href="#"><i class="fa fa-cog"></i> Settings</a>
                    <a href="{{ url_for('logout') }}" class="logout-btn"><i class="fa fa-sign-out-alt"></i> Logout</a>
                </div>
            </div>
        </header>

        <nav class="sidebar" id="sidebar">
            <ul>
                <li><a href="#" class="important-element"><i class="fa fa-book"></i> Subjects</a></li>
                <li><a href="{{ url_for('student_dashboard') }}"><i class="fa fa-home"></i> Home</a></li>
                <li><a href="{{ url_for('join_session', room_id=session.room_id) }}"><i class="fa fa-video"></i> Online Sessions</a></li>
                <li><a href="#" class="important-element"><i class="fa fa-graduation-cap"></i> Grades</a></li>
                <li><a href="#"><i class="fa fa-cog"></i> Settings</a></li>
            </ul>
        </nav>

        <main class="dashboard-main">
            {% block content %}
            <section id="welcome" class="important-element">
                <h2>Welcome, {{ username }}</h2>
                <p>Access your dashboard features below.</p>
                <div class="cards-container">
                    <div class="card important-element">
                        <i class="fa fa-book card-icon"></i>
                        <h3>Subjects</h3>
                        <p>View and manage your subjects.</p>
                        <button onclick="window.location.href='#'">Explore Subjects</button>
                    </div>
                    <div class="card">
                        <i class="fa fa-video card-icon"></i>
                        <h3>Online Sessions</h3>
                        <p>Join live classes and recorded sessions.</p>
                        <ul class="sessions-list">
                            {% for session in sessions %}
                                <li>
                                    <strong>{{ session.session_name }}</strong><br>
                                    <small>Starts at: {{ session.start_time.strftime('%Y-%m-%d %H:%M') }}</small><br>
                                    <a href="{{ url_for('join_session', room_id=session.room_id) }}" class="btn">Join Session</a>
                                </li>
                            {% endfor %}
                        </ul>
                    </div>
                    <div class="card important-element">
                        <i class="fa fa-graduation-cap card-icon"></i>
                        <h3>Grades</h3>
                        <p>Track your academic performance.</p>
                        <button onclick="window.location.href='#'">View Grades</button>
                    </div>
                    <div class="card">
                        <i class="fa fa-cog card-icon"></i>
                        <h3>Settings</h3>
                        <p>Customize your dashboard and preferences.</p>
                        <button onclick="window.location.href='#'">Go to Settings</button>
                    </div>
                </div>
            </section>
            {% endblock %}
        </main>

        <footer class="footer">
            <p>&copy; 2024 Online Learning System. All rights reserved.</p>
        </footer>
    </div>

    <script>
        function toggleSidebar() {
            document.getElementById('sidebar').classList.toggle('active');
        }

        function toggleDropdown() {
            document.getElementById('dropdown-menu').classList.toggle('active');
        }

        function closeDropdown() {
            document.getElementById('dropdown-menu').classList.remove('active');
        }
    </script>
</body>
</html>




























{% extends 'student_dashboard.html' %}

{% block content %}

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Join Online Session</title>
    <!-- <link rel="stylesheet" href="{{ url_for('static', filename='styles.css') }}"> -->
    <script src="https://unpkg.com/@zegocloud/zego-uikit-prebuilt/zego-uikit-prebuilt.js"></script>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f7fc;
            margin: 0;
            padding: 0;
        }

        .main-content {
            margin: 40px auto;
            padding: 30px;
            max-width: 800px;
            border-radius: 10px;
            background-color: #ffffff;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
            text-align: center;
        }

        h2 {
            font-size: 28px;
            color: #333;
            margin-bottom: 20px;
            font-weight: 600;
        }

        p {
            font-size: 16px;
            color: #555;
            line-height: 1.6;
        }

        .status-message {
            font-size: 18px;
            color: #007bff;
            margin: 20px 0;
        }

        .error-message {
            color: red;
            font-weight: bold;
            margin-top: 10px;
        }

        .input-group {
            margin: 20px 0;
        }

        .input-group label {
            font-size: 18px;
            margin-bottom: 8px;
            color: #333;
            font-weight: 500;
        }

        .input-group input {
            width: 100%;
            padding: 12px;
            font-size: 16px;
            border-radius: 8px;
            border: 1px solid #ccc;
            box-sizing: border-box;
            transition: border-color 0.3s ease;
        }

        .input-group input:focus {
            border-color: #007bff;
            outline: none;
        }

        #joinSessionButton {
            margin-top: 20px;
            padding: 12px 24px;
            font-size: 18px;
            color: #fff;
            background-color: #007bff;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        #joinSessionButton:hover {
            background-color: #0056b3;
        }

        #root {
            width: 100%;
            height: 400px;
            margin-top: 30px;
            border-radius: 8px;
            overflow: hidden;
            background-color: #000;
        }
/* 
        .footer {
            margin-top: 30px;
            font-size: 14px;
            color: #777;
        }

        .footer a {
            color: #007bff;
            text-decoration: none;
        }

        .footer a:hover {
            text-decoration: underline;
        } */

    </style>

    <div class="main-content">
        <h2>Join Online Session: {{ session.session_name }}</h2>

        <div id="statusMessage" class="status-message">Checking session status...</div>
        <div id="errorMessage" class="error-message" style="display: none;"></div>

        <div class="input-group">
            <label for="roomIDInput">Enter Room ID:</label>
            <input type="text" id="roomIDInput" placeholder="Enter Room ID" value="{{ session.room_id }}">
        </div>

        <button id="joinSessionButton" onclick="joinSession()" style="display: none;">Join Session</button>
        <div id="root" style="display: none;"></div>

        <!-- <div class="footer">
            <p>If you face any issues, please <a href="mailto:support@yourplatform.com">contact support</a>.</p>
        </div> -->
    </div>

    <script>
        let zp; // Declare Zego instance globally

        window.onload = function () {
            const statusMessage = document.getElementById('statusMessage');
            const errorMessage = document.getElementById('errorMessage');
            const joinSessionButton = document.getElementById('joinSessionButton');
            const rootContainer = document.getElementById('root');

            // Session timing details
            const sessionStartTime = new Date("{{ session.start_time | default('') }}");
            const sessionEndTime = new Date("{{ session.end_time | default('') }}");
            const currentTime = new Date();

            // Check session timing
            if (!sessionStartTime || !sessionEndTime) {
                errorMessage.textContent = "Session schedule is unavailable.";
                errorMessage.style.display = 'block';
                return;
            }

            if (currentTime < sessionStartTime) {
                statusMessage.textContent = `The session will start on ${sessionStartTime.toLocaleString()} and end on ${sessionEndTime.toLocaleString()}.`;
                return;
            } else if (currentTime > sessionEndTime) {
                statusMessage.textContent = `The session has ended. It was scheduled from ${sessionStartTime.toLocaleString()} to ${sessionEndTime.toLocaleString()}.`;
                errorMessage.textContent = "The session has ended. Please return to the join page.";
                errorMessage.style.display = 'block';
                setTimeout(() => {
                    // Auto-terminate the session and return to the join page
                    terminateSession();
                    window.location.href = "join_session"; // Redirect to the join page after 5 seconds
                }, 5000); // Delay to show the message before redirecting
                return;
            } else {
                statusMessage.textContent = "The session is currently active.";
                joinSessionButton.style.display = 'inline-block'; // Show join button
                rootContainer.style.display = 'block'; // Show video container
            }
        };

        function initializeSession(roomID) {
            const userID = Math.floor(Math.random() * 10000).toString();
            const userName = "{{ username }}";
            const appID = 1271126531;
            const serverSecret = "5261b8e7778bf38bbe00c844ca26b988";

            const kitToken = ZegoUIKitPrebuilt.generateKitTokenForTest(appID, serverSecret, roomID, userID, userName);

            zp = ZegoUIKitPrebuilt.create(kitToken); // Assign instance to global variable

            zp.joinRoom({
                container: document.querySelector("#root"),
                scenario: {
                    mode: ZegoUIKitPrebuilt.VideoConference,
                }
            }).then(() => {
                console.log('Successfully joined the session.');

                // Schedule termination at the end of the session
                const sessionEndTime = new Date("{{ session.end_time | default('') }}");
                const timeUntilEnd = sessionEndTime.getTime() - new Date().getTime();

                if (timeUntilEnd > 0) {
                    setTimeout(() => {
                        terminateSession();
                    }, timeUntilEnd);
                } else {
                    terminateSession();
                }
            }).catch((error) => {
                console.error('Failed to join the session:', error);
                alert('Failed to join the session. Please check the Room ID or try again later.');
            });
        }

        function joinSession() {
            const roomID = document.getElementById('roomIDInput').value.trim();
            if (!roomID) {
                alert("Please enter a valid Room ID.");
                return;
            }
            initializeSession(roomID);
        }

        function terminateSession() {
            if (zp) {
                zp.leaveRoom();
                alert("The session has ended. You have been disconnected.");
                document.getElementById('root').innerHTML = ''; // Clear video container
            }
        }
    </script>
{% endblock %}
